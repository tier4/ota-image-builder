[build-system]
build-backend = "hatchling.build"
requires = [
    "hatchling>=1.20",
]

[project]
name = "ota-image-builder"
description = "OTA Image Builder."
dynamic = ["optional-dependencies"]
version = "0.0.23-dev0"
readme = "README.md"
license = "Apache-2.0"
license-files = [
    "LICENSE",
]
requires-python = ">=3.12"
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "ota-image-libs@https://github.com/tier4/ota-image-libs/releases/download/v0.0.22-dev0/ota_image_libs-0.0.33.dev2-py3-none-any.whl#sha256:1fdc01144701a053d79c15028291c01f479d328a880a70a23405af4d2ea6e003",
]
urls.Source = "https://github.com/tier4/ota-image-builder"

[project.scripts]
ota-image-builder = "ota_image_builder.__main__:main"
ota-image-tools = "ota_image_tools.__main__:main"

[dependency-groups]
dev = [
    "coverage>=7,<8",
    "pre-commit>=3,<5",
    "pyinstaller~=6.15",
    "pytest~=8.3",
    "pytest-mock~=3.14",
    "ruff",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [
  "docs",
  ".github",
]

[tool.hatch.build.targets.wheel]
only-include = [
  "src",
]
sources = [
  "src",
]

[tool.pyright]
exclude = [
    "**/__pycache__",
    ".ruff_cache",
    ".venv",
    "venv",
    ".tests",
]
ignore = [
    "proto/**",
    "**/*_pb2.py*",
    "**/*_pb2_grpc.py*",
    "scripts",
]
typeCheckingMode = "standard"
pythonVersion = "3.12"

[tool.ruff]
line-length = 88
target-version = "py312"
# NOTE: not include tests and tools for now
include = [
    "tests/**/*.py",
    "src/**/*.py",
    "pyproject.toml",
]

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",   # pyflakes
    "Q",   # flake8-quotes
    "I",   # isort
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "ICN", # flake8-import-conventions
]
ignore = [
    "E266", # (too many leading '#'): sometimes we use multiple # for separting sections
    "E203", # (white space before ':'): this error conflicts with black linting
    "E701", # (multiple statements on one line)
    "S101", # (use of assert): mostly we use assert for typing
]

[tool.ruff.lint.pydocstyle]
convention = "google"
