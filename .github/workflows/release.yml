name: Release CI

on:
  release:
    types: [published]
  # allow manually triggering the build
  workflow_dispatch:

jobs:
  ota-image-builder_build:
    permissions:
      contents: write
    strategy:
      matrix:
        platform: [x86_64, arm64]
        include:
          - platform: x86_64
            os: ubuntu-22.04
            asset_name: ota-image-builder-x86_64
          - platform: arm64
            os: ubuntu-22.04-arm
            asset_name: ota-image-builder-arm64
    runs-on: ${{ matrix.os }}
    timeout-minutes: 6
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup python
        uses: actions/setup-python@v6
        with:
          python-version-file: '.python-version'

      - name: Install uv
        uses: astral-sh/setup-uv@v7

      - name: Install the project
        run: uv sync --locked --dev

      - name: Build one-file executable with pyinstaller
        run: >
          uv run --locked pyinstaller -s -F --optimize=2
          --name ${{ matrix.asset_name }}
          src/ota_image_builder/__main__.py

      - name: Quick test the built executable
        run: ./dist/${{ matrix.asset_name }} version

      - name: Calculate checksum
        run: |
          for ASSET in dist/*; \
            do \
              sha256sum ${ASSET} | sed -E "s@(\w+)\s+.*@sha256:\1@" > \
                ${ASSET}.checksum; \
            done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: |
            ./dist/*

      - name: Publish release artifacts
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./dist/*

  ota-image-builder_image_build:
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        platform: [x86_64, arm64]
        # NOTE: we do native build for both platforms
        include:
          - platform: x86_64
            os: ubuntu-22.04
          - platform: arm64
            os: ubuntu-22.04-arm
    runs-on: ${{ matrix.os }}
    timeout-minutes: 6
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Build ota-image-builder docker image release
        run: |
          docker build \
            -f docker/Dockerfile.ota-image-builder \
            -t ota-image-builder:local_build .

      - name: Test build and check version
        id: version_check
        run: |
          docker run \
            --rm ota-image-builder:local_build version > version.txt
          echo "release_ver=`cat version.txt`" >> "$GITHUB_OUTPUT"
          echo "release version is `cat version.txt`."

      - name: Push ota-image-builder docker image
        if: >
          github.event_name == 'release' &&
          github.event.action == 'published' &&
          github.event.release.target_commitish == 'main'
        env:
          BASE_URL: ghcr.io/tier4/ota-image-builder
          RELEASE_VER: ${{ steps.version_check.outputs.release_ver }}
        run: |
          RAW_VER="${RELEASE_VER#v}"
          docker tag ota-image-builder:local_build "$BASE_URL:$RELEASE_VER"
          docker tag ota-image-builder:local_build "$BASE_URL:$RAW_VER"
          docker push "$BASE_URL:$RELEASE_VER"
          docker push "$BASE_URL:$RAW_VER"
          